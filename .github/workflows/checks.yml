name: Checks

on:
  push:
    branches:
      - split_ci2
  pull_request: {}
  schedule:
    - cron: '0 23 * * SUN-THU'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    if: (github.event_name == 'schedule' && github.repository == 'optuna/optuna-integration') || (github.event_name != 'schedule')
    runs-on: ubuntu-latest
    outputs:
      allennlp: ${{ steps.changes.outputs.allennlp }}
      botorch: ${{ steps.changes.outputs.botorch }}
      catalyst: ${{ steps.changes.outputs.catalyst }}
      catboost: ${{ steps.changes.outputs.catboost }}
      chainer: ${{ steps.changes.outputs.chainer }}
      chainermn: ${{ steps.changes.outputs.chainermn }}
      cma: ${{ steps.changes.outputs.cma }}
      dask: ${{ steps.changes.outputs.dask }}
      fastaiv1: ${{ steps.changes.outputs.fastaiv1 }}
      fastaiv2: ${{ steps.changes.outputs.fastaiv2 }}
      keras: ${{ steps.changes.outputs.keras }}
      lightgbm: ${{ steps.changes.outputs.lightgbm }}
      mlflow: ${{ steps.changes.outputs.mlflow }}
      mxnet: ${{ steps.changes.outputs.mxnet }}
      pytorch_distributed: ${{ steps.changes.outputs.pytorch_distributed }}
      pytorch_ignite: ${{ steps.changes.outputs.pytorch_ignite }}
      pytorch_lightning: ${{ steps.changes.outputs.pytorch_lightning }}
      shap: ${{ steps.changes.outputs.shap }}
      sklearn: ${{ steps.changes.outputs.sklearn }}
      skopt: ${{ steps.changes.outputs.skopt }}
      skorch: ${{ steps.changes.outputs.skorch }}
      tensorboard: ${{ steps.changes.outputs.tensorboard }}
      tensorflow: ${{ steps.changes.outputs.tensorflow }}
      tfkeras: ${{ steps.changes.outputs.tfkeras }}
      wandb: ${{ steps.changes.outputs.wandb }}
      xgboost: ${{ steps.changes.outputs.xgboost }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        base: split_ci2
        filters: |
          allennlp:
            - 'optuna_integration/allennlp/**'
            - 'tests/allennlp/**'
            - '.github/workflows/checks.yml'
          botorch:
            - 'optuna_integration/botorch/**'
            - 'tests/botorch/**'
            - '.github/workflows/checks.yml'
          catalyst:
            - 'optuna_integration/catalyst/**'
            - 'tests/catalyst/**'
            - '.github/workflows/checks.yml'
          catboost:
            - 'optuna_integration/catboost/**'
            - 'tests/catboost/**'
            - '.github/workflows/checks.yml'
          chainer:
            - 'optuna_integration/chainer/**'
            - 'tests/chainer/**'
            - '.github/workflows/checks.yml'
          chainermn:
            - 'optuna_integration/chainermn/**'
            - 'tests/chainermn/**'
            - '.github/workflows/checks.yml'
          cma:
            - 'optuna_integration/cma/**'
            - 'tests/cma/**'
            - '.github/workflows/checks.yml'
          dask:
            - 'optuna_integration/dask/**'
            - 'tests/dask/**'
            - '.github/workflows/checks.yml'
          fastaiv1:
            - 'optuna_integration/fastaiv1/**'
            - 'tests/fastaiv1/**'
            - '.github/workflows/checks.yml'
          fastaiv2:
            - 'optuna_integration/fastaiv2/**'
            - 'tests/fastaiv2/**'
            - '.github/workflows/checks.yml'
          keras:
            - 'optuna_integration/keras/**'
            - 'tests/keras/**'
            - '.github/workflows/checks.yml'
          lightgbm:
            - 'optuna_integration/lightgbm/**'
            - 'tests/lightgbm/**'
            - '.github/workflows/checks.yml'
          mlflow:
            - 'optuna_integration/mlflow/**'
            - 'tests/mlflow/**'
            - '.github/workflows/checks.yml'
          mxnet:
            - 'optuna_integration/mxnet/**'
            - 'tests/mxnet/**'
            - '.github/workflows/checks.yml'
          pytorch_distributed:
            - 'optuna_integration/pytorch_distributed/**'
            - 'tests/pytorch_distributed/**'
            - '.github/workflows/checks.yml'
          pytorch_ignite:
            - 'optuna_integration/pytorch_ignite/**'
            - 'tests/pytorch_ignite/**'
            - '.github/workflows/checks.yml'
          pytorch_lightning:
            - 'optuna_integration/pytorch_lightning/**'
            - 'tests/pytorch_lightning/**'
            - '.github/workflows/checks.yml'
          shap:
            - 'optuna_integration/shap/**'
            - 'tests/shap/**'
            - '.github/workflows/checks.yml'
          sklearn:
            - 'optuna_integration/sklearn/**'
            - 'tests/sklearn/**'
            - '.github/workflows/checks.yml'
          skopt:
            - 'optuna_integration/skopt/**'
            - 'tests/skopt/**'
            - '.github/workflows/checks.yml'
          skorch:
            - 'optuna_integration/skorch/**'
            - 'tests/skorch/**'
            - '.github/workflows/checks.yml'
          tensorboard:
            - 'optuna_integration/tensorboard/**'
            - 'tests/tensorboard/**'
            - '.github/workflows/checks.yml'
          tensorflow:
            - 'optuna_integration/tensorflow/**'
            - 'tests/tensorflow/**'
            - '.github/workflows/checks.yml'
          tfkeras:
            - 'optuna_integration/tfkeras/**'
            - 'tests/tfkeras/**'
            - '.github/workflows/checks.yml'
          wandb:
            - 'optuna_integration/wandb/**'
            - 'tests/wandb/**'
            - '.github/workflows/checks.yml'
          xgboost:
            - 'optuna_integration/xgboost/**'
            - 'tests/xgboost/**'
            - '.github/workflows/checks.yml'

  allennlp:
    if: needs.changes.outputs.allennlp == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'allennlp'

  botorch:
    if: needs.changes.outputs.botorch == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'botorch'

  catalyst:
    if: needs.changes.outputs.catalyst == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'catalyst'

  catboost:
    if: needs.changes.outputs.catboost == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'catboost'

  chainer:
    if: needs.changes.outputs.chainer == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'chainer'

  chainermn:
    if: needs.changes.outputs.chainermn == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'chainermn'

  cma:
    if: needs.changes.outputs.cma == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'cma'

  dask:
    if: needs.changes.outputs.dask == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'dask'

  fastaiv1:
    if: needs.changes.outputs.fastaiv1 == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'fastaiv1'

  fastaiv2:
    if: needs.changes.outputs.fastaiv2 == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'fastaiv2'

  keras:
    if: needs.changes.outputs.keras == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'keras'

  lightgbm:
    if: needs.changes.outputs.lightgbm == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'lightgbm'

  mlflow:
    if: needs.changes.outputs.mlflow == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'mlflow'

  mxnet:
    if: needs.changes.outputs.mxnet == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'mxnet'

  pytorch_distributed:
    if: needs.changes.outputs.pytorch_distributed == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'pytorch_distributed'

  pytorch_ignite:
    if: needs.changes.outputs.pytorch_ignite == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'pytorch_ignite'

  pytorch_lightning:
    if: needs.changes.outputs.pytorch_lightning == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'pytorch_lightning'

  shap:
    if: needs.changes.outputs.shap == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'shap'

  sklearn:
    if: needs.changes.outputs.sklearn == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'sklearn'

  skopt:
    if: needs.changes.outputs.skopt == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'skopt'

  skorch:
    if: needs.changes.outputs.skorch == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'skorch'

  tensorboard:
    if: needs.changes.outputs.tensorboard == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'tensorboard'

  tensorflow:
    if: needs.changes.outputs.tensorflow == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'tensorflow'

  tfkeras:
    if: needs.changes.outputs.tfkeras == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'tfkeras'

  wandb:
    if: needs.changes.outputs.wandb == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'wandb'

  xgboost:
    if: needs.changes.outputs.xgboost == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'xgboost'
